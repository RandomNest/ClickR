@{
    ViewBag.Title = "ClickR";
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">Welcome to ClickR. A demo SignalR "game".</p>
</div>

<div class="row">
    <div class="col-md-6">
        <input id="message" class="form-control" type="text" />
        <input id="sendmessage" class="btn btn-default" type="button" value="Send" />
        <input id="username" type="hidden" />
        <ul id="discussion" style="height: 200px; overflow: auto"></ul>
    </div>

    <div class="col-md-6">
        <input id="playerready" class="btn btn-default" type="button" value="Ready">
        <input id="clickit" class="btn btn-default" type="button" value="Click"/>
        <ul id="playerinfo"></ul>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <ul id="gameinfo"></ul>
    </div>
</div>


@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {

            // Wanted to show that two hubs could be used on the same page.

            // Reference the auto-generated proxy for the hub.
            //var chat = $.connection.chatHub;
            var chat = $.connection.ChatHub;
            var game = $.connection.GameHub;

            WireUpChatClient(chat);
            WireUpGameClient(game);

            // TODO: Change the way the user name is retrieved.
            // Get the user name and store it to prepend to messages.
            $('#username').val(prompt('Enter your name:', ''));

            // Set initial focus to message input box.
            $('#message').focus();

            // Start the connection.
            $.connection.hub.start().done(function () {

                WireUpChatCommands(chat);
                WireUpGameCommands(game);

                game.server.ConnectPlayer($('#username').val());
            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function WireUpChatClient(chatHub) {
            // Set up the client methods for the server to call (callbacks)

            // Create a function that the hub can call back to display messages.
            chatHub.client.addNewMessageToPage = function (name, message) {

                var discussion = $('#discussion');

                // Add the message to the page.
                discussion.append('<li><strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</li>');
            };
        }

        function WireUpChatCommands(chatHub) {

            // When send message is clicked.
            $('#sendmessage').click(function () {

                // Call the server's Send method on the hub.
                chatHub.server.send($('#username').val(), $('#message').val());

                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            });
        }

        function WireUpGameClient(gameHub) {

            gameHub.client.refreshGameInfo = function (gameInfo) {

                var gameinfo = $('#gameinfo');

                gameinfo.empty();

                gameinfo.append('<li>Game Name: <strong>' + htmlEncode(gameInfo.Name) + '</li>');

                $.each(gameInfo.RankedPlayers, function () {
                    var player = this;

                    gameinfo.append('<li><strong>' + htmlEncode(player.Name) + '</strong>: ' + htmlEncode(player.ClickCount) + '</li>');
                });
            };

            gameHub.client.refreshPlayerInfo = function (player) {

                var playerinfo = $('#playerinfo');

                playerinfo.empty();
                playerinfo.append('<li>Name: <strong>' + htmlEncode(player.Name) + '</strong></li>');
                playerinfo.append('<li>Click Count: <strong>' + htmlEncode(player.ClickCount) + '</strong></li>');
            };
        }

        function WireUpGameCommands(gameHub) {

            // When player clicks the "clickit" button
            $('#clickit').click(function () {

                // Call the server's ClickIt method on the hub.
                gameHub.server.ClickIt($('#username').val());
            });

            // When player clicks the "imready" button
            $('#imready').click(function () {

                // Call the server's ClickIt method on the hub.
                gameHub.server.ImReady($('#username').val());
            });

        }

    </script>
}
